* Add tests for AuthStore
* Add tests for auto-login
* Add tests for file keys
* Add better exception when .of methods fail
* Ensure that connections aren't being recreated on auth change in flutter-graphql
* Add image transformation to Storage
* Add image transformation tests
* Flutter APIs should take clients, not service objects
* Need UPDATE and DELETE permissions on todos table


Q:
  * Why don't file deletions need the token?

* IDEA: FileMetadata.toHttpHeaders or FileMetadata.updateHttpHeaders
* BUGS
  * DOCS
    * /auth/mfa/generate reads qe code, not qr code
    * login response is incorrect — there is no session
    * MFAGenerate docs show the wrong params
    * mfa/totp URL is wrong
      https://docs.nhost.io/auth/api-reference#totp-login
    * logout URL is wrong (all is being passed as a body arg, not a query arg)
      https://docs.nhost.io/auth/api-reference#logout-user
    * NhostApolloProvider confuses the NhostAuthProvider docs
      * It's completely unrelated, but uses the same `auth` variable, so the
        reader (me!) wonders how everything ties together. Until I realize they
        aren't (aside from requiring the same auth resource).
    * Email changing APIs are not documented
  * mfa/generate requires an empty JSON object body (should allow null body)
  * Bad path joining in Storage.ts
  * Storage doesn't work outside of web pages, I don't think
  * POST to /storage/o returns a response with "key" field, but
    GET /storage/m for a directory lists the field as "Key" (capitalized)
    GET /storage/m for a file is "key" lowercase
  * Packages are missing LICENSE files
* Sleep timer won't make sense for Dart, since periodic timers stack up. To
  read: https://github.com/dart-lang/sdk/issues/23487
* Q: Do we need toJSONs? They are kind of helpful for debug printing.
* THOUGHT: toStrings would be nice for the core types
* Q: Do we need to support custom JWT keys? (hasura settings mentions them)
* IDEA: user_data seems pretty limited. Why not expose the fields that are
    actually editable? Or does this hook into Hasura somehow.
* DART BUG:
  * ContentType does not implement equality
    * Posted https://github.com/dart-lang/sdk/issues/34061#issuecomment-793332807
      to encourage an API change here
* IDEA: More specific exceptions
  * User already registered
  * Invalid user data
  * Consider renaming mfaTotp to completeMfaLogin or something
* IDEA: API fool-proofing
  * It's an API that reduces the opportunity for mistakes
  * For example, a login() or register() call returns an object that is able
    to perform operations specific to the user
  * This has the added benefit of allowing multiple logged in users
    simultaneously
* IDEA: Cross-platform API tests
  * Each client can be verified against headers and JSON body, keyed by a
    request ID
  * Each request ID has an associated response object, which can be used for
    simulating behavioral tests
  * Because we have requests and responses, we can test the server as well
  * A single repo can ensure that all clients and the server stay in sync
* Q: The decoded QR code provides a lot more information than the mfa/generate
     response.
     secret=BASXODRVLFSX452T&period=30&digits=6&algorithm=SHA1&issuer=HBP

     otp_secret does not appear to be enough to generate a code. Should we also
     return these additional values from the backend? OR document them?
* Q: Should we automatically add a trailing slash to the getDirectoryMetadata
     path
* IMPROVE
  * DOCS:
    * Storage Rules should be better documented
* IDEA: isAutenticated could be a tri-state enum
* Q: I see a banner asking me if I want to upgrade Hasura server...can I
     actually do that?
* IDEA: It would be nice if confirmEmailChange was an auth response, so that
  my cached user could refresh.
* CONCERN: Could it be problematic that the login API reveals that a user
  exists when the password doesn't match.
* It is EXTREMELY important that _setSession() and _clearSession() be awaited. I
  just battled a brutal race condition caused by the use of unawaited().

# TESTING
## APIs
### AUTH
* register
* login
* logout
* activate ⚠️
* changeEmail
* requestEmailChange
* confirmEmailChange
* changePassword ⚠️
* requestPasswordChange
* confirmPasswordChange
* generateMfa
* enableMfa
* disableMfa
* completeMfaLogin

### Storage
* uploadFileFromBytes
* uploadFileFromString
* getFileMetadata
* getDirectoryMetadata
* delete
